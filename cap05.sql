
SELECT * FROM TALUNO;

SELECT * FROM TCONTRATO;

-- produto cartesiano -> errado
SELECT TALUNO.COD_ALUNO, TALUNO.NOME, TCONTRATO.TOTAL
FROM TALUNO, TCONTRATO;

-- CORRETO
SELECT FROM TALUNO.COD_ALUNO, TALUNO.NOME, TCONTRATO.TOTAL
FROM TALUNO, TCONTRATO WHERE TALUNO.COD_ALUNO = TCONTRATO.COD_ALUNO;

UPDATE TALUNO SET
NOME = 'MARCOS'
WHERE COD_ALUNO = 4;

UPDATE TALUNO SET
CEP = 73082220
WHERE COD_ALUNO = 24;

-- ERRADO - COLUNA AMBIGUA
SELECT TALUNO.COD_ALUNO, TALUNO.NOME, TOTAL FROM TALUNO, TCONTRATO
WHERE TALUNO.COD_ALUNO = TALUNO.COD_ALUNO;

--CORRETO, quando uma coluna existe com mesmo  nome em mais de uma tabela, colocar prefixo na coluna


--União da tabela de aluno com ontrato
SELECT ALU.COD_ALUNO, ALU.NOME AS ALUNO, CON.COD_CONTRATO, CON.DATA, CON.TOTAL
FROM TALUNO ALU, TCONTRATO CON WHERE CON.COD_ALUNO = ALU.COD_ALUNO AND Upper(ALU.NOME)
LIKE '%' ORDER BY ALU.NOME;

SELECT * FROM TALUNO;
SELECT * FROM TCONTRATO;
SELECT * FROM TITEM;
SELECT * FROM TCUSO;

SELECT ALU.COD_ALUNO, ALU.NOME AS ALUNO,
       CON.COD_CONTRATO, CON.DATA, CON.TOTAL,
       ITE.COD_CURSO, CUR.NOME AS CURSO, ITE.VALOR
FROM TALUNO ALU, TCONTRATO CON, TITEM ITE, TCURSO CUR
WHERE ALU.COD_ALUNO = CON.COD_ALUNO(+) --criterio de união
AND CON.COD_CONTRATO = ITE.COD_CONTRATO(+)
AND ITE.COD_CURSO = CUR.COD_CURSO(+)
ORDER BY CON.TOTAL DESC;

INSERT INTO TALUNO VALUES(10, 'PEDRO', 'NOVO HAMBURGO', NULL);

CREATE TABLE TDESCONTO(
CLASSE VARCHAR(1) PRIMARY KEY,
INFERIOR NUMBER(4,2),
SUPERIOR NUMBER(4,2)
);

INSERT INTO TDESCONTO VALUES('A',00,10);
INSERT INTO TDESCONTO VALUES('B',11,15);
INSERT INTO TDESCONTO VALUES('C',16,20);
INSERT INTO TDESCONTO VALUES('D',21,25);
INSERT INTO TDESCONTO VALUES('E',26,30);

SELECT * FROM TDESCONTO;

COMMIT;

SELECT * FROM TCONTRATO;

UPDATE TCONTRATO SET DESCONTO = 27 WHERE COD_CONTRATO = 6;

UPDATE TCONTRATO SET DESCONTO = 18 WHERE COD_CONTRATO = 5;

SELECT CON.COD_CONTRATO AS CONTRATO, CON.DESCONTO, DES.CLASSE AS DESCONTO
FROM TCONTRATO CON, TDESCONTO DES WHERE CON.DESCONTO
BETWEEN DES.INFERIOR AND DES.SUPERIOR ORDER BY CON.COD_CONTRATO;

--Mostra cursos vendidos
SELECT CUR.COD_CURSO, CUR.NOME, ITE.VALOR FROM TCURSO CUR, TITEM ITE
WHERE CUR.COD_CURSO = ITE.COD_CURSO;

--Mostra cursos não vendidos
SELECT CUR.COD_CURSO, CUR.NOME, ITE.COD_ITEM
FROM TCURSO CUR, TITEM ITE WHERE CUR.COD_CURSO = ITE.COD_CURSO(+)
AND ITE.COD_ITEM IS NULL;

SELECT * FROM TCURSO;

ALTER TABLE TCURSO DROP COLUMN PRE_REQ;
ALTER TABLE TCURSO ADD PRE_REQ INTEGER;

INSERT INTO TCURSO VALUES(6, 'LOGICA', 100, 20);
INSERT INTO TCURSO VALUES(7, 'PHP', 1000, 100);

UPDATE TCURSO SET PRE_REQ = 7 WHERE COD_CURSO = 1;
UPDATE TCURSO SET PRE_REQ = 7 WHERE COD_CURSO = 3;
UPDATE TCURSO SET PRE_REQ = 1 WHERE COD_CURSO = 2;
UPDATE TCURSO SET PRE_REQ = 3 WHERE COD_CURSO = 4;
UPDATE TCURSO SET PRE_REQ = 7 WHERE COD_CURSO = 7;

SELECT CURSO.NOME AS CURSO, PRE_REQ.NOME AS PRE_REQUISITO
FROM TCURSO CURSO, TCURSO PRE_REQ
WHERE CURSO.PRE_REQ = PRE_REQ.COD_CURSO(+);




